{"version":3,"file":"index-c36fef58.js","sources":["../../node_modules/ol/events/Event.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/easing.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/math.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj.js","../../node_modules/ol/interaction/DragAndDrop.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/has.js","../../node_modules/ol/transform.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/format/JSONFeature.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/format/GeoJSON.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/interaction/Link.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/color.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/View.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/size.js","../../node_modules/ol/Map.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/interaction/Modify.js","../../node_modules/ol/events/SnapEvent.js","../../node_modules/ol/interaction/Snap.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/@turf/helpers/dist/es/index.js","../../node_modules/@turf/meta/dist/es/index.js","../../node_modules/@turf/bbox/dist/es/index.js","../../node_modules/@turf/invariant/dist/es/index.js","../../node_modules/@turf/distance/dist/es/index.js","../../node_modules/@turf/destination/dist/es/index.js","../../node_modules/@turf/bearing/dist/es/index.js","../../node_modules/@turf/line-segment/dist/es/index.js","../../node_modules/geojson-rbush/index.js","../../node_modules/@turf/line-intersect/dist/es/index.js","../../node_modules/@turf/nearest-point-on-line/dist/es/index.js","../../node_modules/@turf/boolean-point-on-line/dist/es/index.js","../../node_modules/object-keys/isArguments.js","../../node_modules/object-keys/implementation.js","../../node_modules/object-keys/index.js","../../node_modules/has-symbols/shams.js","../../node_modules/has-tostringtag/shams.js","../../node_modules/has-symbols/index.js","../../node_modules/has-proto/index.js","../../node_modules/function-bind/implementation.js","../../node_modules/function-bind/index.js","../../node_modules/has/src/index.js","../../node_modules/get-intrinsic/index.js","../../node_modules/call-bind/index.js","../../node_modules/call-bind/callBound.js","../../node_modules/is-arguments/index.js","../../node_modules/has-property-descriptors/index.js","../../node_modules/gopd/index.js","../../node_modules/define-data-property/index.js","../../node_modules/define-properties/index.js","../../node_modules/object-is/implementation.js","../../node_modules/object-is/polyfill.js","../../node_modules/object-is/shim.js","../../node_modules/object-is/index.js","../../node_modules/is-regex/index.js","../../node_modules/functions-have-names/index.js","../../node_modules/set-function-name/index.js","../../node_modules/regexp.prototype.flags/implementation.js","../../node_modules/regexp.prototype.flags/polyfill.js","../../node_modules/regexp.prototype.flags/shim.js","../../node_modules/regexp.prototype.flags/index.js","../../node_modules/is-date-object/index.js","../../node_modules/deep-equal/index.js","../../node_modules/@turf/line-overlap/dist/es/index.js","../../detectIntersection.js","../../node_modules/colormap/colorScale.js","../../node_modules/lerp/index.js","../../node_modules/colormap/index.js","../../colorize.js","../../main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n","import { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nexport default function bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n","import { featureCollection, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexport default lineSegment;\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = new rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","import { feature, featureCollection, point, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineSegment from \"@turf/line-segment\";\nimport { featureEach } from \"@turf/meta\";\nimport rbush from \"geojson-rbush\";\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\nexport default lineIntersect;\n","import bearing from \"@turf/bearing\";\nimport distance from \"@turf/distance\";\nimport destination from \"@turf/destination\";\nimport lineIntersects from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport { point, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    if (options === void 0) { options = {}; }\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity,\n    });\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            //stop\n            var stop_1 = point(coords[i + 1]);\n            stop_1.properties.dist = distance(pt, stop_1, options);\n            // sectionLength\n            var sectionLength = distance(start, stop_1, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop_1.properties.dist);\n            var direction = bearing(start, stop_1);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersects(lineString([\n                perpendicularPt1.geometry.coordinates,\n                perpendicularPt2.geometry.coordinates,\n            ]), lineString([start.geometry.coordinates, stop_1.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location =\n                    length + distance(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop_1.properties.dist < closestPt.properties.dist) {\n                closestPt = stop_1;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt &&\n                intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\nexport default nearestPointOnLine;\n","import { getCoord, getCoords } from \"@turf/invariant\";\n/**\n * Returns true if a point is on a line. Accepts a optional parameter to ignore the\n * start and end vertices of the linestring.\n *\n * @name booleanPointOnLine\n * @param {Coord} pt GeoJSON Point\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreEndVertices=false] whether to ignore the start and end vertices.\n * @param {number} [options.epsilon] Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * @returns {boolean} true/false\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[-1, -1],[1, 1],[1.5, 2.2]]);\n * var isPointOnLine = turf.booleanPointOnLine(pt, line);\n * //=true\n */\nfunction booleanPointOnLine(pt, line, options) {\n    if (options === void 0) { options = {}; }\n    // Normalize inputs\n    var ptCoords = getCoord(pt);\n    var lineCoords = getCoords(line);\n    // Main\n    for (var i = 0; i < lineCoords.length - 1; i++) {\n        var ignoreBoundary = false;\n        if (options.ignoreEndVertices) {\n            if (i === 0) {\n                ignoreBoundary = \"start\";\n            }\n            if (i === lineCoords.length - 2) {\n                ignoreBoundary = \"end\";\n            }\n            if (i === 0 && i + 1 === lineCoords.length - 1) {\n                ignoreBoundary = \"both\";\n            }\n        }\n        if (isPointOnLineSegment(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary, typeof options.epsilon === \"undefined\" ? null : options.epsilon)) {\n            return true;\n        }\n    }\n    return false;\n}\n// See http://stackoverflow.com/a/4833823/1979085\n// See https://stackoverflow.com/a/328122/1048847\n/**\n * @private\n * @param {Position} lineSegmentStart coord pair of start of line\n * @param {Position} lineSegmentEnd coord pair of end of line\n * @param {Position} pt coord pair of point to check\n * @param {boolean|string} excludeBoundary whether the point is allowed to fall on the line ends.\n * @param {number} epsilon Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * If true which end to ignore.\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary, epsilon) {\n    var x = pt[0];\n    var y = pt[1];\n    var x1 = lineSegmentStart[0];\n    var y1 = lineSegmentStart[1];\n    var x2 = lineSegmentEnd[0];\n    var y2 = lineSegmentEnd[1];\n    var dxc = pt[0] - x1;\n    var dyc = pt[1] - y1;\n    var dxl = x2 - x1;\n    var dyl = y2 - y1;\n    var cross = dxc * dyl - dyc * dxl;\n    if (epsilon !== null) {\n        if (Math.abs(cross) > epsilon) {\n            return false;\n        }\n    }\n    else if (cross !== 0) {\n        return false;\n    }\n    if (!excludeBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    }\n    else if (excludeBoundary === \"start\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n    }\n    else if (excludeBoundary === \"end\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n    }\n    else if (excludeBoundary === \"both\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n    }\n    return false;\n}\nexport default booleanPointOnLine;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar call = Function.prototype.call;\n\nmodule.exports = call.bind ? call.bind(hasOwnProperty) : function (O, P) {\n  return call.call(hasOwnProperty, O, P);\n};\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n","'use strict';\n\nvar functionsHaveNames = function functionsHaveNames() {\n\treturn typeof function f() {}.name === 'string';\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\nif (gOPD) {\n\ttry {\n\t\tgOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\tgOPD = null;\n\t}\n}\n\nfunctionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {\n\tif (!functionsHaveNames() || !gOPD) {\n\t\treturn false;\n\t}\n\tvar desc = gOPD(function () {}, 'name');\n\treturn !!desc && !!desc.configurable;\n};\n\nvar $bind = Function.prototype.bind;\n\nfunctionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {\n\treturn functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';\n};\n\nmodule.exports = functionsHaveNames;\n","'use strict';\n\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar $TypeError = TypeError;\n\nmodule.exports = function setFunctionName(fn, name) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\tif (!loose || functionsHaveConfigurableNames) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'name', name, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'name', name);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar setFunctionName = require('set-function-name');\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = setFunctionName(function flags() {\n\tif (this != null && this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.hasIndices) {\n\t\tresult += 'd';\n\t}\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.unicodeSets) {\n\t\tresult += 'v';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n}, 'get flags', true);\n\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar $gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function getPolyfill() {\n\tif (supportsDescriptors && (/a/mig).flags === 'gim') {\n\t\tvar descriptor = $gOPD(RegExp.prototype, 'flags');\n\t\tif (\n\t\t\tdescriptor\n\t\t\t&& typeof descriptor.get === 'function'\n\t\t\t&& typeof RegExp.prototype.dotAll === 'boolean'\n\t\t\t&& typeof RegExp.prototype.hasIndices === 'boolean'\n\t\t) {\n\t\t\t/* eslint getter-return: 0 */\n\t\t\tvar calls = '';\n\t\t\tvar o = {};\n\t\t\tObject.defineProperty(o, 'hasIndices', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'd';\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(o, 'sticky', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'y';\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (calls === 'dy') {\n\t\t\t\treturn descriptor.get;\n\t\t\t}\n\t\t}\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar getPolyfill = require('./polyfill');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar flagsBound = callBind(getPolyfill());\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateGetDayCall(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","var objectKeys = require('object-keys');\nvar isArguments = require('is-arguments');\nvar is = require('object-is');\nvar isRegex = require('is-regex');\nvar flags = require('regexp.prototype.flags');\nvar isDate = require('is-date-object');\n\nvar getTime = Date.prototype.getTime;\n\nfunction deepEqual(actual, expected, options) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected;\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts);\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  /* eslint max-statements: [2, 50] */\n  var i, key;\n  if (typeof a !== typeof b) { return false; }\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if (aIsRegex || bIsRegex) {\n    return a.source === b.source && flags(a) === flags(b);\n  }\n\n  if (isDate(a) && isDate(b)) {\n    return getTime.call(a) === getTime.call(b);\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  try {\n    var ka = objectKeys(a);\n    var kb = objectKeys(b);\n  } catch (e) { // happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; }\n  }\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) { return false; }\n  }\n\n  return true;\n}\n\nmodule.exports = deepEqual;\n","import rbush from \"geojson-rbush\";\nimport lineSegment from \"@turf/line-segment\";\nimport nearestPointOnLine from \"@turf/nearest-point-on-line\";\nimport booleanPointOnLine from \"@turf/boolean-point-on-line\";\nimport { getCoords } from \"@turf/invariant\";\nimport { featureEach, segmentEach } from \"@turf/meta\";\nimport { featureCollection, isObject, } from \"@turf/helpers\";\nimport equal from \"deep-equal\";\n/**\n * Takes any LineString or Polygon and returns the overlapping lines between both features.\n *\n * @name lineOverlap\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=0] Tolerance distance to match overlapping line segments (in kilometers)\n * @returns {FeatureCollection<LineString>} lines(s) that are overlapping between both features\n * @example\n * var line1 = turf.lineString([[115, -35], [125, -30], [135, -30], [145, -35]]);\n * var line2 = turf.lineString([[115, -25], [125, -30], [135, -30], [145, -25]]);\n *\n * var overlapping = turf.lineOverlap(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, overlapping]\n */\nfunction lineOverlap(line1, line2, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options))\n        throw new Error(\"options is invalid\");\n    var tolerance = options.tolerance || 0;\n    // Containers\n    var features = [];\n    // Create Spatial Index\n    var tree = rbush();\n    // To-Do -- HACK way to support typescript\n    var line = lineSegment(line1);\n    tree.load(line);\n    var overlapSegment;\n    // Line Intersection\n    // Iterate over line segments\n    segmentEach(line2, function (segment) {\n        var doesOverlaps = false;\n        if (!segment) {\n            return;\n        }\n        // Iterate over each segments which falls within the same bounds\n        featureEach(tree.search(segment), function (match) {\n            if (doesOverlaps === false) {\n                var coordsSegment = getCoords(segment).sort();\n                var coordsMatch = getCoords(match).sort();\n                // Segment overlaps feature\n                if (equal(coordsSegment, coordsMatch)) {\n                    doesOverlaps = true;\n                    // Overlaps already exists - only append last coordinate of segment\n                    if (overlapSegment)\n                        overlapSegment = concatSegment(overlapSegment, segment);\n                    else\n                        overlapSegment = segment;\n                    // Match segments which don't share nodes (Issue #901)\n                }\n                else if (tolerance === 0\n                    ? booleanPointOnLine(coordsSegment[0], match) &&\n                        booleanPointOnLine(coordsSegment[1], match)\n                    : nearestPointOnLine(match, coordsSegment[0]).properties.dist <=\n                        tolerance &&\n                        nearestPointOnLine(match, coordsSegment[1]).properties.dist <=\n                            tolerance) {\n                    doesOverlaps = true;\n                    if (overlapSegment)\n                        overlapSegment = concatSegment(overlapSegment, segment);\n                    else\n                        overlapSegment = segment;\n                }\n                else if (tolerance === 0\n                    ? booleanPointOnLine(coordsMatch[0], segment) &&\n                        booleanPointOnLine(coordsMatch[1], segment)\n                    : nearestPointOnLine(segment, coordsMatch[0]).properties.dist <=\n                        tolerance &&\n                        nearestPointOnLine(segment, coordsMatch[1]).properties.dist <=\n                            tolerance) {\n                    // Do not define (doesOverlap = true) since more matches can occur within the same segment\n                    // doesOverlaps = true;\n                    if (overlapSegment)\n                        overlapSegment = concatSegment(overlapSegment, match);\n                    else\n                        overlapSegment = match;\n                }\n            }\n        });\n        // Segment doesn't overlap - add overlaps to results & reset\n        if (doesOverlaps === false && overlapSegment) {\n            features.push(overlapSegment);\n            overlapSegment = undefined;\n        }\n    });\n    // Add last segment if exists\n    if (overlapSegment)\n        features.push(overlapSegment);\n    return featureCollection(features);\n}\n/**\n * Concat Segment\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<LineString>} segment 2-vertex LineString\n * @returns {Feature<LineString>} concat linestring\n */\nfunction concatSegment(line, segment) {\n    var coords = getCoords(segment);\n    var lineCoords = getCoords(line);\n    var start = lineCoords[0];\n    var end = lineCoords[lineCoords.length - 1];\n    var geom = line.geometry.coordinates;\n    if (equal(coords[0], start))\n        geom.unshift(coords[1]);\n    else if (equal(coords[0], end))\n        geom.push(coords[1]);\n    else if (equal(coords[1], start))\n        geom.unshift(coords[0]);\n    else if (equal(coords[1], end))\n        geom.push(coords[0]);\n    return line;\n}\nexport default lineOverlap;\n","import GeoJSON from 'ol/format/GeoJSON';\nimport { booleanPointOnLine, lineIntersect, lineOverlap } from '@turf/turf';\n\nfunction removePointsOnLines(points, lines) {\n    // Создайте пустой массив для хранения точек, не лежащих на линиях\n    const filteredPoints = [];\n\n    // Переберите каждую точку и проверьте, лежит ли она на какой-либо из линий\n    points.forEach(point => {\n        // Переберите каждую линию и проверьте, лежит ли точка на линии\n        const isOnLine = lines.some(line => {\n            return booleanPointOnLine(point, line, {\n                epsilon: 0.1,\n                ignoreEndVertices: false,\n            });\n        });\n\n        // Если точка не лежит на линии, добавьте ее в отфильтрованный массив\n        if (!isOnLine) {\n            filteredPoints.push(point);\n        }\n    });\n\n    return filteredPoints;\n}\nexport async function detectIntersections(source, intersectionSource) {\n    // Получение всех фичей из исходного слоя\n    const features = source.getFeatures();\n    const format = new GeoJSON();\n\n    // Перебор всех фичей и проверка на пересечения\n    for (let i = 0; i < features.length; i++) {\n        await new Promise(res => setTimeout(res));\n        for (let j = i + 1; j < features.length; j++) {\n            const geojson1 = format.writeFeaturesObject([features[i]]);\n            const geojson2 = format.writeFeaturesObject([features[j]]);\n            // Проверка на пересечение\n            const overlap = lineOverlap(geojson1, geojson2);\n            const intersect = lineIntersect(geojson1, geojson2);\n\n            const result = removePointsOnLines(intersect.features, overlap.features);\n            if (!result.length) continue;\n\n            result.forEach(res => {\n                const points = format.readFeatures(res);\n                if (points.length) {\n                    intersectionSource.addFeatures(points);\n                }\n            });\n        }\n    }\n}\n","module.exports={\n\t\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\n\n\t\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\n\n\t\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\n\n\t\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\n\n\t\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\n\n\t\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\n\n\t\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\n\n\t\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\n\n\t\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\n\n\t\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\n\n\t\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\n\n\t\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\n\n\t\"alpha\": [{\"index\":0, \"rgb\": [255,255,255,0]},{\"index\":1, \"rgb\": [255,255,255,1]}],\n\n\t\"viridis\": [{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\n\n\t\"inferno\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\n\n\t\"magma\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\n\n\t\"plasma\": [{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\n\n\t\"warm\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"cool\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"rainbow-soft\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}],\n\n\t\"bathymetry\": [{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}],\n\n\t\"cdom\": [{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}],\n\n\t\"chlorophyll\": [{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}],\n\n\t\"density\": [{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}],\n\n\t\"freesurface-blue\": [{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"freesurface-red\": [{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"oxygen\": [{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}],\n\n\t\"par\": [{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}],\n\n\t\"phase\": [{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}],\n\n\t\"salinity\": [{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}],\n\n\t\"temperature\": [{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}],\n\n\t\"turbidity\": [{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}],\n\n\t\"velocity-blue\": [{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}],\n\n\t\"velocity-green\": [{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}],\n\n\t\"cubehelix\": [{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]\n};\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n","import colormap from 'colormap';\nimport { getArea } from 'ol/sphere';\nimport { Style, Fill, Stroke } from 'ol/style';\n\nconst min = 1e8; // the smallest area\nconst max = 2e13; // the biggest area\nconst steps = 50;\nconst ramp = colormap({\n    colormap: 'blackbody',\n    nshades: steps,\n});\n\nfunction clamp(value, low, high) {\n    return Math.max(low, Math.min(value, high));\n}\n\nfunction getColor(feature) {\n    const area = getArea(feature.getGeometry());\n    const f = Math.pow(clamp((area - min) / (max - min), 0, 1), 1 / 2);\n    const index = Math.round(f * (steps - 1));\n    const opacity = '99';\n    return `${ramp[index]}${opacity}`;\n}\n\nexport function colorfulAreasStyle(feature) {\n    return new Style({\n        fill: new Fill({\n            color: getColor(feature),\n        }),\n        stroke: new Stroke({\n            color: 'rgba(255,255,255,0.8)',\n        }),\n    });\n}\nexport const onlyBoundsStyle = new Style({\n    fill: new Fill({\n        color: 'rgba(255,255,255,0.2)',\n    }),\n    stroke: new Stroke({\n        color: 'blue',\n    }),\n});\n","import DragAndDrop from 'ol/interaction/DragAndDrop';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Link from 'ol/interaction/Link';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport Modify from 'ol/interaction/Modify';\nimport Snap from 'ol/interaction/Snap';\nimport { Style, Fill, Stroke, Circle } from 'ol/style';\nimport OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { detectIntersections } from './detectIntersection';\nimport { onlyBoundsStyle, colorfulAreasStyle } from './colorize';\n\nlet showIntersect = false;\nconst osmSource = new OSM();\nconst osmLayer = new TileLayer({\n    source: osmSource,\n});\n\nconst intersectionSource = new VectorSource();\nconst intersectionLayer = new VectorLayer({\n    source: intersectionSource,\n    style: new Style({\n        image: new Circle({\n            radius: 3,\n            fill: new Fill({ color: '#ff000050' }),\n            stroke: new Stroke({ color: 'red' }),\n        }),\n    }),\n});\n\nconst customSource = new VectorSource({\n    format: new GeoJSON(),\n    url: './map-data (1).json',\n});\n\nconst customLayer = new VectorLayer({\n    source: customSource,\n    style: onlyBoundsStyle,\n});\n\nconst map = new Map({\n    target: 'map-container',\n    layers: [],\n    view: new View({\n        center: [0, 0],\n        zoom: 2,\n    }),\n});\n\nconst showOsmLayerToggle = document.getElementById('osmToggle');\nshowOsmLayerToggle?.addEventListener('change', function (e) {\n    const showOsm = e.target?.checked;\n    osmLayer.setVisible(showOsm);\n});\n\nconst colorizeToggle = document.getElementById('colorizeToggle');\ncolorizeToggle?.addEventListener('change', function (e) {\n    const needColors = e.target?.checked;\n    customLayer.setStyle(needColors ? colorfulAreasStyle : onlyBoundsStyle);\n});\n\nconst intersectionToggle = document.getElementById('intersectionToggle');\nintersectionToggle?.addEventListener('change', function (e) {\n    showIntersect = e.target?.checked;\n    if (showIntersect) {\n        detectIntersections(customSource, intersectionSource);\n    } else {\n        intersectionLayer?.getSource()?.clear();\n    }\n});\n\nconst format = new GeoJSON({ featureProjection: 'EPSG:3857' });\nconst download = document.getElementById('download');\ncustomSource.on('change', function () {\n    const features = customSource.getFeatures();\n    const json = format.writeFeatures(features);\n    download.href = 'data:application/json;charset=utf-8,' + encodeURIComponent(json);\n});\n\nmap.addLayer(osmLayer);\nmap.addLayer(customLayer);\nmap.addLayer(intersectionLayer);\n\n// сохраняет положение карты при перезагрузке окна\nmap.addInteraction(new Link());\n// позволяет загружать карту через Drag-n-Drop\nmap.addInteraction(\n    new DragAndDrop({\n        source: customSource,\n        formatConstructors: [GeoJSON],\n    }),\n);\nconst modify = new Modify({\n    source: customSource,\n});\n// позволяет править линии на карте\nmap.addInteraction(modify);\n// привязывает точки к ближайшей при редактировании, чтоб избежать неточных границ\nmap.addInteraction(\n    new Snap({\n        source: customSource,\n    }),\n);\n\ncustomSource.once('change', function () {\n    if (showIntersect && customSource.getState() === 'ready') {\n        detectIntersections(customSource, intersectionSource);\n    }\n});\nmodify.on('modifystart', () => {\n    // Очистка слоя с пересечениями\n    intersectionLayer?.getSource()?.clear();\n});\nmodify.on('modifyend', () => {\n    if (showIntersect) {\n        detectIntersections(customSource, intersectionSource);\n    }\n});\n"],"names":["BaseEvent","type","Event","EventType","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","InteractionProperty","easeIn","t","easeOut","inAndOut","linear","Interaction","options","mapBrowserEvent","active","map","pan","view","delta","duration","currentCenter","center","zoomByDelta","anchor","currentZoom","newZoom","newResolution","Interaction$1","METERS_PER_UNIT","Projection","global","tileGrid","extent","worldExtent","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","resolution","point","PROJECTIONS","fromEPSG4326","input","output","dimension","y","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projectionExtent","worldWidth","wrapAndSliceX","clamp","min","max","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","closestOnCircle","circle","d","closestOnSegment","segment","along","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getAreaInternal","geometry","coords","jj","geometries","levels","level","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","width","height","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","DragAndDropEventType","DragAndDropEvent","file","features","DragAndDrop","formatConstructors","format","getProjection","result","text","formats","dropArea","files","reader","DragAndDrop$1","assert","assertion","errorMessage","Feature","geometryOrProperties","properties","style","createStyleFunction","id","name","styles","Feature$1","ua","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","create","set","c","e","f","setFromArray","transform1","transform2","apply","makeScale","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","transformStringDiv","toString","transformString","node","transform2D","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$1","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","clonedGeometries","GeometryCollection$1","FeatureFormat","dataProjection","feature","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","power","JSONFeature","getObject","JSONFeature$1","SimpleGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","forEach","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","interpolatePoint","fraction","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","LineString","lineString","LineString$1","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","Point","Point$1","MultiPoint","multiPoint","points","MultiPoint$1","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","LinearRing$1","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","Polygon$1","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","GeoJSON","geoJSONFeature","readGeometry","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","GeoJSON$1","MapEventType","to5","number","readNumber","string","writeNumber","differentNumber","differentArray","Link","animationOptions","acc","params","oldMap","url","updateView","viewProperties","zoom","layers","layersParam","visible","layer","initial","visibilities","Link$1","CollectionEventType","Property","CollectionEvent","element","Collection","array","elem","prev","except","Collection$1","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","LayerProperty","BaseLayer","managed","state","zIndex","states","background","maxResolution","minResolution","maxZoom","minZoom","opacity","zindex","BaseLayer$1","RenderEventType","ViewHint","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Layer","baseOptions","pixel","frameState","layerState","layerExtent","inView","getAttributions","attributions","layerRenderer","layerStatesArray","arrayLayerState","viewState","Layer$1","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","iconImageCache","expireIconCache","MapRenderer$1","RenderEvent","inversePixelTransform","context","RenderEvent$1","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","label","contextInstructions","CompositeMapRenderer","container","declutterLayers","previousElement","sourceState","CompositeMapRenderer$1","GroupEvent","LayerGroup","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","LayerGroup$1","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapBrowserEventHandler$1","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","PriorityQueue$1","TileState","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","TileQueue$1","getTilePriority","tileSourceKey","tileCenter","tileResolution","Control","mapEvent","Control$1","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","visibleAttributions","collapsible","collapsed","Attribution$1","Rotate","compassClassName","button","contains","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","Zoom$1","defaults","controls","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","PointerInteraction$1","all","conditions","pass","altKeyOnly","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragPan$1","DragRotate","DragRotate$1","RenderBox","startPixel","endPixel","px","RenderBox$1","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragBox$1","DragZoom","DragZoom$1","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardPan$1","KeyboardZoom","KeyboardZoom$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","Kinetic$1","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchRotate$1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","applyTransform","group","renderer","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Map$2","Map","quickselect","left","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush$2","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","ImageState","ImageStyle","pixelRatio","displacement","rotateWithView","ImageStyle$1","asColorLike","RegularShape","fill","image","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Fill","Fill$1","Stroke","Stroke$1","Style","defaultGeometryFunction","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Style$1","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","error","load","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","taintedTestContext","IconImage","imageState","ctx","cacheKey","calculateScale","wantedWidth","wantedHeight","Icon","getIconImage","onload","imageSize","iconImageSize","Icon$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","textAlign","justify","textBaseline","Text$1","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","parseCallExpression","Ops","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","expression","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","pointsName","requireNumber","radius1","shape","evaluateRadius","requireColorLike","requireNumberArray","requireSizeLike","BaseVectorLayer","RBush","renderOrder","toStyleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","range","geometryWidths","beg","keep","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","LayerRenderer","tiles","tileRange","LayerRenderer$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","ExecutorGroup$1","CanvasImmediateRenderer","userTransform","localTransform","close","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","render","clipped","intersectsExtent","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","attributionLike","Source$1","VectorEventType","withCredentials","loadFeaturesXhr","success","failure","xhr","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","getDefaultStyleFunction","writer","segments","ss","rBush","nodesToRemove","nodeToRemove","segmentData","lines","rings","centerSegmentData","circumferenceSegmentData","featureSegments","vertexFeature","vertex","dragSegment","depth","coordinateDistance","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","geom","viewExtent","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredCoordinateDistance","squaredDist2","geometryUid","rTree","newSegmentData","newSegmentData2","dragSegments","segmentsByFeature","deleted","component","newIndex","pointCoordinates","distanceToCenterSquared","distanceToCircumference","Modify$1","SnapEventType","SnapEvent","getFeatureFromEvent","Snap","register","feature_uid","segmenter","segmentsData","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","Snap$1","Tile","tileCoord","Tile$1","ImageTile","tileLoadFunction","getBlankImage","ImageTile$1","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Triangulation$1","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","ReprojTile$1","LRUCache","highWaterMark","entry","LRUCache$1","getKeyZXY","fromKey","hash","withinExtentAndZ","TileCache","usedTiles","TileCache$1","TileEventType","TileRange","TileRange$1","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","tileSize","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","TileGrid$1","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","covered","tileCoordKey","getTileGridForProjection","tilePixelRatio","scaleSize","tileCount","TileSourceEvent","TileSource$1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","charCode","stop","UrlTile","tileState","tileUrlFunction","UrlTile$1","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","TileImage$1","XYZ","XYZ$1","ATTRIBUTION","OSM","OSM$1","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","BaseTileLayer$1","CanvasTileLayerRenderer","tileLayer","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","childTileRange","canvasScale","toTransformString","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","tileCallback","wantedTiles","CanvasTileLayerRenderer$1","TileLayer","TileLayer$1","earthRadius","factors","unitsFactors","areaFactors","feat","_options","isNumber","featureCollection","_i","coordinates_1","ring","fc","round","num","precision","multiplier","radiansToLength","radians","lengthToRadians","lengthToDegrees","radiansToDegrees","bearingToAzimuth","bearing","degrees","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","startFactor","finalFactor","isObject","validateBBox","validateId","coordEach","geojson","excludeWrapCoord","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","isFeatureCollection","isFeature","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","coordReduce","initialValue","previousValue","currentCoord","propEach","propReduce","currentProperties","featureEach","featureReduce","currentFeature","coordAll","geomEach","featureProperties","featureBBox","geomReduce","flattenEach","flattenReduce","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentReduce","started","lineEach","lineReduce","currentLine","findSegment","findPoint","getCoord","getCoords","from","to","coordinates1","coordinates2","dLat","dLon","longitude1","latitude1","bearingRad","latitude2","longitude2","lng","lat","calculateFinalBearing","lon1","lon2","bear","lineSegment","results","lineSegmentFeature","createSegments","currentCoords","coords1","coords2","west","south","east","north","require$$0","helpers","require$$1","meta","require$$2","turfBBox","require$$3","geojsonRbush","tree","json","geojsonRbushModule","lineIntersect","line1","line2","unique","intersect","x4","y4","denom","numeA","numeB","uA","uB","nearestPointOnLine","pt","closestPt","stop_1","sectionLength","heightDistance","perpendicularPt1","perpendicularPt2","lineIntersects","intersectPt","booleanPointOnLine","ptCoords","lineCoords","ignoreBoundary","isPointOnLineSegment","lineSegmentStart","lineSegmentEnd","excludeBoundary","epsilon","dxc","dyc","dxl","dyl","cross","toStr","isArguments","str","isArgs","keysShim","has","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isFunction","theKeys","skipProto","skipConstructor","implementation","slice","origKeys","originalKeys","keysWorksWithArguments","objectKeys","shams","sym","symObj","symVal","syms","descriptor","hasSymbols","origSymbol","hasSymbolSham","test","$Object","hasProto","ERROR_MESSAGE","funcType","concatty","slicy","arrLike","joiny","joiner","that","bound","binder","boundLength","boundArgs","Empty","functionBind","hasOwnProperty","call","O","P","undefined","$SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","getProto","needsEval","TypedArray","INTRINSICS","errorProto","doEval","gen","LEGACY_ALIASES","bind","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","rePropName","reEscapeChar","stringToPath","quote","subString","getBaseIntrinsic","allowMissing","intrinsicName","alias","getIntrinsic","intrinsicBaseName","intrinsic","intrinsicRealName","skipFurtherCaching","isOwn","desc","GetIntrinsic","$apply","$call","$reflectApply","$defineProperty","$max","module","originalFunction","applyBind","callBind","$indexOf","callBound","hasToStringTag","$toString","isStandardArguments","isLegacyArguments","supportsStandardArguments","hasPropertyDescriptors","hasPropertyDescriptors_1","gopd","defineDataProperty","nonEnumerable","nonWritable","nonConfigurable","loose","concat","supportsDescriptors","defineProperty","predicate","defineProperties","predicates","props","defineProperties_1","numberIsNaN","polyfill","getPolyfill","define","shim","require$$4","objectIs","isRegexMarker","badStringifier","throwRegexMarker","gOPD","regexClass","isRegex","hasLastIndexDataProperty","functionsHaveNames","$bind","functionsHaveNames_1","hasDescriptors","functionsHaveConfigurableNames","setFunctionName","calls","TypeErr","regex","proto","flagsBound","regexp_prototype_flags","getDay","tryDateObject","dateClass","isDateObject","is","flags","isDate","require$$5","getTime","deepEqual","opts","objEquiv","isUndefinedOrNull","isBuffer","aIsRegex","bIsRegex","aIsBuffer","bIsBuffer","ka","kb","deepEqual_1","lineOverlap","overlapSegment","doesOverlaps","coordsSegment","coordsMatch","equal","concatSegment","removePointsOnLines","filteredPoints","detectIntersections","intersectionSource","geojson1","geojson2","colorScale","lerp_1","colormap","createColormap","spec","indicies","fromrgba","torgba","nsteps","cmap","nshades","colors","rgba","amt","rgb2hex","rgbaStr","rgb2float","dig","hex","ramp","getColor","colorfulAreasStyle","onlyBoundsStyle","showIntersect","osmSource","osmLayer","intersectionLayer","customSource","customLayer","showOsmLayerToggle","showOsm","_a","colorizeToggle","needColors","intersectionToggle","_b","download","modify"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234]}